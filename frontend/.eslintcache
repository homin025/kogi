[{"C:\\Users\\homin\\Documents\\GitHub\\kogi\\frontend\\src\\index.js":"1","C:\\Users\\homin\\Documents\\GitHub\\kogi\\frontend\\src\\App.js":"2","C:\\Users\\homin\\Documents\\GitHub\\kogi\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\homin\\Documents\\GitHub\\kogi\\frontend\\src\\basepage.js":"4","C:\\Users\\homin\\Documents\\GitHub\\kogi\\frontend\\src\\content.js":"5","C:\\Users\\homin\\Documents\\GitHub\\kogi\\frontend\\src\\navigator.js":"6","C:\\Users\\homin\\Documents\\GitHub\\kogi\\frontend\\src\\header.js":"7"},{"size":517,"mtime":1610792019447,"results":"8","hashOfConfig":"9"},{"size":208,"mtime":1610792019436,"results":"10","hashOfConfig":"9"},{"size":375,"mtime":1610792019455,"results":"11","hashOfConfig":"9"},{"size":4491,"mtime":1610792019439,"results":"12","hashOfConfig":"9"},{"size":10168,"mtime":1610964347811,"results":"13","hashOfConfig":"9"},{"size":3922,"mtime":1610792019454,"results":"14","hashOfConfig":"9"},{"size":4237,"mtime":1610792019444,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1ltah0p",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"C:\\Users\\homin\\Documents\\GitHub\\kogi\\frontend\\src\\index.js",[],["34","35"],"C:\\Users\\homin\\Documents\\GitHub\\kogi\\frontend\\src\\App.js",[],"C:\\Users\\homin\\Documents\\GitHub\\kogi\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\homin\\Documents\\GitHub\\kogi\\frontend\\src\\basepage.js",["36","37"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createMuiTheme, ThemeProvider, withStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport Navigator from './navigator';\r\nimport Content from './content';\r\nimport Header from './header';\r\n\r\n// function Copyright() {\r\n//   return (\r\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n//       {'Copyright © '}\r\n//       <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n//         Your Website\r\n//       </Link>{' '}\r\n//       {new Date().getFullYear()}\r\n//       {'.'}\r\n//     </Typography>\r\n//   );\r\n// }\r\n\r\nlet theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: '#63ccff',\r\n      main: '#009be5',\r\n      dark: '#006db3',\r\n    },\r\n  },\r\n  typography: {\r\n    h5: {\r\n      fontWeight: 500,\r\n      fontSize: 26,\r\n      letterSpacing: 0.5,\r\n    },\r\n  },\r\n  shape: {\r\n    borderRadius: 8,\r\n  },\r\n  props: {\r\n    MuiTab: {\r\n      disableRipple: true,\r\n    },\r\n  },\r\n  mixins: {\r\n    toolbar: {\r\n      minHeight: 48,\r\n    },\r\n  },\r\n});\r\n\r\ntheme = {\r\n  ...theme,\r\n  overrides: {\r\n    MuiDrawer: {\r\n      paper: {\r\n        backgroundColor: '#18202c',\r\n      },\r\n    },\r\n    MuiButton: {\r\n      label: {\r\n        textTransform: 'none',\r\n      },\r\n      contained: {\r\n        boxShadow: 'none',\r\n        '&:active': {\r\n          boxShadow: 'none',\r\n        },\r\n      },\r\n    },\r\n    MuiTabs: {\r\n      root: {\r\n        marginLeft: theme.spacing(1),\r\n      },\r\n      indicator: {\r\n        height: 3,\r\n        borderTopLeftRadius: 3,\r\n        borderTopRightRadius: 3,\r\n        backgroundColor: theme.palette.common.white,\r\n      },\r\n    },\r\n    MuiTab: {\r\n      root: {\r\n        textTransform: 'none',\r\n        margin: '0 16px',\r\n        minWidth: 0,\r\n        padding: 0,\r\n        [theme.breakpoints.up('md')]: {\r\n          padding: 0,\r\n          minWidth: 0,\r\n        },\r\n      },\r\n    },\r\n    MuiIconButton: {\r\n      root: {\r\n        padding: theme.spacing(1),\r\n      },\r\n    },\r\n    MuiTooltip: {\r\n      tooltip: {\r\n        borderRadius: 4,\r\n      },\r\n    },\r\n    MuiDivider: {\r\n      root: {\r\n        backgroundColor: '#404854',\r\n      },\r\n    },\r\n    MuiListItemText: {\r\n      primary: {\r\n        fontWeight: theme.typography.fontWeightMedium,\r\n      },\r\n    },\r\n    MuiListItemIcon: {\r\n      root: {\r\n        color: 'inherit',\r\n        marginRight: 0,\r\n        '& svg': {\r\n          fontSize: 20,\r\n        },\r\n      },\r\n    },\r\n    MuiAvatar: {\r\n      root: {\r\n        width: 32,\r\n        height: 32,\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst drawerWidth = 256;\r\n\r\nconst styles = {\r\n  root: {\r\n    display: 'flex',\r\n    minHeight: '100vh',\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  app: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  main: {\r\n    flex: 1,\r\n    padding: theme.spacing(6, 4),\r\n    background: '#eaeff1',\r\n  },\r\n  footer: {\r\n    padding: theme.spacing(2),\r\n    background: '#eaeff1',\r\n  },\r\n};\r\n\r\nfunction Paperbase(props) {\r\n  const { classes } = props;\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <nav className={classes.drawer}>\r\n          <Hidden smUp implementation=\"js\">\r\n            <Navigator\r\n              PaperProps={{ style: { width: drawerWidth } }}\r\n              variant=\"temporary\"\r\n              open={mobileOpen}\r\n              onClose={handleDrawerToggle}\r\n            />\r\n          </Hidden>\r\n          <Hidden xsDown implementation=\"css\">\r\n            <Navigator PaperProps={{ style: { width: drawerWidth } }} />\r\n          </Hidden>\r\n        </nav>\r\n        <div className={classes.app}>\r\n          <Header onDrawerToggle={handleDrawerToggle} />\r\n          <main className={classes.main}>\r\n            <Content />\r\n          </main>\r\n          <footer className={classes.footer}>\r\n            {/* <Copyright /> */}\r\n          </footer>\r\n        </div>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nPaperbase.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Paperbase);","C:\\Users\\homin\\Documents\\GitHub\\kogi\\frontend\\src\\content.js",["38","39"],"C:\\Users\\homin\\Documents\\GitHub\\kogi\\frontend\\src\\navigator.js",["40","41","42","43","44"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport DnsRoundedIcon from '@material-ui/icons/DnsRounded';\r\nimport PermMediaOutlinedIcon from '@material-ui/icons/PhotoSizeSelectActual';\r\nimport PublicIcon from '@material-ui/icons/Public';\r\nimport SettingsEthernetIcon from '@material-ui/icons/SettingsEthernet';\r\nimport SettingsInputComponentIcon from '@material-ui/icons/SettingsInputComponent';\r\nimport TimerIcon from '@material-ui/icons/Timer';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport PhonelinkSetupIcon from '@material-ui/icons/PhonelinkSetup';\r\nimport kogi from './kogi.png';\r\nconst categories = [\r\n  {\r\n    id: '기능',\r\n    children: [\r\n      { id: '질문생성', icon: <PeopleIcon />, active: true },\r\n      { id: '기사요약', icon: <DnsRoundedIcon /> },\r\n      { id: '리뷰생성', icon: <PermMediaOutlinedIcon /> },\r\n      { id: '동화창작', icon: <PublicIcon /> },\r\n      { id: '챗봇모델', icon: <SettingsEthernetIcon /> },\r\n    ],\r\n  },\r\n\r\n];\r\n\r\nconst styles = (theme) => ({\r\n  categoryHeader: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  categoryHeaderPrimary: {\r\n    color: theme.palette.common.white,\r\n  },\r\n  item: {\r\n    paddingTop: 1,\r\n    paddingBottom: 1,\r\n    color: 'rgba(255, 255, 255, 0.7)',\r\n    '&:hover,&:focus': {\r\n      backgroundColor: 'rgba(255, 255, 255, 0.08)',\r\n    },\r\n  },\r\n  itemCategory: {\r\n    backgroundColor: '#232f3e',\r\n    boxShadow: '0 -1px 0 #404854 inset',\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  firebase: {\r\n    fontSize: 24,\r\n    color: theme.palette.common.white,\r\n  },\r\n  itemActiveItem: {\r\n    color: '#4fc3f7',\r\n  },\r\n  itemPrimary: {\r\n    fontSize: 'inherit',\r\n  },\r\n  itemIcon: {\r\n    minWidth: 'auto',\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  divider: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n});\r\n\r\nfunction Navigator(props) {\r\n  const { classes, ...other } = props;\r\n\r\n  return (\r\n    <Drawer variant=\"permanent\" {...other}>\r\n      <List disablePadding>\r\n        <ListItem className={clsx(classes.firebase, classes.item, classes.itemCategory)}>\r\n          <img src = {kogi} alt= ''/>\r\n        </ListItem>\r\n\r\n        {categories.map(({ id, children }) => (\r\n          <React.Fragment key={id}>\r\n            <ListItem className={classes.categoryHeader}>\r\n              <ListItemText\r\n                classes={{\r\n                  primary: classes.categoryHeaderPrimary,\r\n                }}\r\n              >\r\n                {id}\r\n              </ListItemText>\r\n            </ListItem>\r\n            {children.map(({ id: childId, icon, active }) => (\r\n              <ListItem\r\n                key={childId}\r\n                button\r\n                className={clsx(classes.item, active && classes.itemActiveItem)}\r\n              >\r\n                <ListItemIcon className={classes.itemIcon}>{icon}</ListItemIcon>\r\n                <ListItemText\r\n                  classes={{\r\n                    primary: classes.itemPrimary,\r\n                  }}\r\n                >\r\n                  {childId}\r\n                </ListItemText>\r\n              </ListItem>\r\n            ))}\r\n\r\n            <Divider className={classes.divider} />\r\n          </React.Fragment>\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nNavigator.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Navigator);","C:\\Users\\homin\\Documents\\GitHub\\kogi\\frontend\\src\\header.js",["45","46","47","48","49","50","51","52","53"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst lightColor = 'rgba(255, 255, 255, 0.7)';\r\n\r\nconst styles = (theme) => ({\r\n  secondaryBar: {\r\n    zIndex: 0,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -theme.spacing(1),\r\n  },\r\n  iconButtonAvatar: {\r\n    padding: 4,\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: lightColor,\r\n    '&:hover': {\r\n      color: theme.palette.common.white,\r\n    },\r\n  },\r\n  button: {\r\n    borderColor: lightColor,\r\n  },\r\n});\r\n\r\nfunction Header(props) {\r\n  const { classes, onDrawerToggle } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* <AppBar color=\"primary\" position=\"sticky\" elevation={0}>\r\n        <Toolbar>\r\n          <Grid container spacing={1} alignItems=\"center\">\r\n            <Hidden smUp>\r\n              <Grid item>\r\n                <IconButton\r\n                  color=\"inherit\"\r\n                  aria-label=\"open drawer\"\r\n                  onClick={onDrawerToggle}\r\n                  className={classes.menuButton}\r\n                >\r\n                  <MenuIcon />\r\n                </IconButton>\r\n              </Grid>\r\n            </Hidden>\r\n            <Grid item xs />\r\n            <Grid item>\r\n              <Link className={classes.link} href=\"#\" variant=\"body2\">\r\n                Go to docs\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Tooltip title=\"Alerts • No alerts\">\r\n                <IconButton color=\"inherit\">\r\n                  <NotificationsIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Grid>\r\n            <Grid item>\r\n              <IconButton color=\"inherit\" className={classes.iconButtonAvatar}>\r\n                <Avatar src=\"/static/images/avatar/1.jpg\" alt=\"My Avatar\" />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar> */}\r\n      <AppBar\r\n        component=\"div\"\r\n        className={classes.secondaryBar}\r\n        color=\"primary\"\r\n        position=\"static\"\r\n        elevation={0}\r\n      >\r\n        <Toolbar>\r\n          <Grid container alignItems=\"center\" spacing={1}>\r\n            <Grid item xs>\r\n              <Typography color=\"inherit\" variant=\"h5\" component=\"h1\">\r\n                질문생성\r\n              </Typography>\r\n            </Grid>\r\n            {/* <Grid item>\r\n              <Button className={classes.button} variant=\"outlined\" color=\"inherit\" size=\"small\">\r\n                Web setup\r\n              </Button>\r\n            </Grid> */}\r\n            <Grid item>\r\n              <Tooltip title=\"Help\">\r\n                <IconButton color=\"inherit\">\r\n                  <HelpIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {/* <AppBar\r\n        component=\"div\"\r\n        className={classes.secondaryBar}\r\n        color=\"primary\"\r\n        position=\"static\"\r\n        elevation={0}\r\n      >\r\n        <Tabs value={0} textColor=\"inherit\">\r\n          <Tab textColor=\"inherit\" label=\"Users\" />\r\n          <Tab textColor=\"inherit\" label=\"Sign-in method\" />\r\n          <Tab textColor=\"inherit\" label=\"Templates\" />\r\n          <Tab textColor=\"inherit\" label=\"Usage\" />\r\n        </Tabs>\r\n      </AppBar> */}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  onDrawerToggle: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Header);",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":6,"column":8,"nodeType":"60","messageId":"61","endLine":6,"endColumn":18},{"ruleId":"58","severity":1,"message":"62","line":7,"column":8,"nodeType":"60","messageId":"61","endLine":7,"endColumn":12},{"ruleId":"58","severity":1,"message":"63","line":18,"column":7,"nodeType":"60","messageId":"61","endLine":18,"endColumn":12},{"ruleId":"58","severity":1,"message":"64","line":51,"column":7,"nodeType":"60","messageId":"61","endLine":51,"endColumn":13},{"ruleId":"58","severity":1,"message":"65","line":11,"column":8,"nodeType":"60","messageId":"61","endLine":11,"endColumn":16},{"ruleId":"58","severity":1,"message":"66","line":17,"column":8,"nodeType":"60","messageId":"61","endLine":17,"endColumn":34},{"ruleId":"58","severity":1,"message":"67","line":18,"column":8,"nodeType":"60","messageId":"61","endLine":18,"endColumn":17},{"ruleId":"58","severity":1,"message":"68","line":19,"column":8,"nodeType":"60","messageId":"61","endLine":19,"endColumn":20},{"ruleId":"58","severity":1,"message":"69","line":20,"column":8,"nodeType":"60","messageId":"61","endLine":20,"endColumn":26},{"ruleId":"58","severity":1,"message":"70","line":4,"column":8,"nodeType":"60","messageId":"61","endLine":4,"endColumn":14},{"ruleId":"58","severity":1,"message":"71","line":5,"column":8,"nodeType":"60","messageId":"61","endLine":5,"endColumn":14},{"ruleId":"58","severity":1,"message":"72","line":8,"column":8,"nodeType":"60","messageId":"61","endLine":8,"endColumn":14},{"ruleId":"58","severity":1,"message":"62","line":10,"column":8,"nodeType":"60","messageId":"61","endLine":10,"endColumn":12},{"ruleId":"58","severity":1,"message":"73","line":11,"column":8,"nodeType":"60","messageId":"61","endLine":11,"endColumn":16},{"ruleId":"58","severity":1,"message":"74","line":12,"column":8,"nodeType":"60","messageId":"61","endLine":12,"endColumn":25},{"ruleId":"58","severity":1,"message":"75","line":13,"column":8,"nodeType":"60","messageId":"61","endLine":13,"endColumn":11},{"ruleId":"58","severity":1,"message":"76","line":14,"column":8,"nodeType":"60","messageId":"61","endLine":14,"endColumn":12},{"ruleId":"58","severity":1,"message":"77","line":45,"column":20,"nodeType":"60","messageId":"61","endLine":45,"endColumn":34},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'axios' is assigned a value but never used.","'apiURL' is assigned a value but never used.","'HomeIcon' is defined but never used.","'SettingsInputComponentIcon' is defined but never used.","'TimerIcon' is defined but never used.","'SettingsIcon' is defined but never used.","'PhonelinkSetupIcon' is defined but never used.","'Avatar' is defined but never used.","'Button' is defined but never used.","'Hidden' is defined but never used.","'MenuIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'onDrawerToggle' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]